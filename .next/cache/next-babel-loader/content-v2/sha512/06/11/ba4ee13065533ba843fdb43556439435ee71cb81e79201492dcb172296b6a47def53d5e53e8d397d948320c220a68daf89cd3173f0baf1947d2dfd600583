{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\karthik suryadevara\\\\React-course-udemy\\\\nextjs-meetups-project\\\\pages\\\\[meetupId]\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Fragment } from 'react';\nimport MeetupDetails from '../../components/meetups/MeetupDetails';\nimport { MongoClient, ObjectId } from 'mongodb';\n\nconst MeetupDetailsPage = props => {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MeetupDetails, _objectSpread({}, props), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getStaticPaths() {\n  return {\n    fallback: true,\n    paths: [{\n      params: {\n        meetupId: 'm1'\n      }\n    }]\n  };\n}\nexport async function getStaticProps(context) {\n  const id = context.params.meetupId;\n  const client = await MongoClient.connect('mongodb+srv://karthik:admin@cluster0.ovvz5.mongodb.net/meetupsDB?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const data = await meetupsCollection.findOne({\n    _id: ObjectId(id)\n  });\n  client.close();\n  return {\n    props: {\n      image: data.image,\n      title: data.title,\n      description: data.description,\n      address: data.address\n    }\n  };\n}\nexport default MeetupDetailsPage;","map":{"version":3,"sources":["C:/karthik suryadevara/React-course-udemy/nextjs-meetups-project/pages/[meetupId]/index.js"],"names":["React","Fragment","MeetupDetails","MongoClient","ObjectId","MeetupDetailsPage","props","getStaticPaths","fallback","paths","params","meetupId","getStaticProps","context","id","client","connect","db","meetupsCollection","collection","data","findOne","_id","close","image","title","description","address"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,aAAP,MAA0B,wCAA1B;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;;AAEA,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;AACnC,sBACE,QAAC,QAAD;AAAA,2BACE,QAAC,aAAD,oBAAmBA,KAAnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAND;;AAQA,OAAO,eAAeC,cAAf,GAAgC;AACrC,SAAO;AACLC,IAAAA,QAAQ,EAAE,IADL;AAELC,IAAAA,KAAK,EAAE,CACL;AACEC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ;AADV,KADK;AAFF,GAAP;AAQD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAMC,EAAE,GAAGD,OAAO,CAACH,MAAR,CAAeC,QAA1B;AACA,QAAMI,MAAM,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CACnB,8FADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,IAAI,GAAG,MAAMF,iBAAiB,CAACG,OAAlB,CAA0B;AAAEC,IAAAA,GAAG,EAAElB,QAAQ,CAACU,EAAD;AAAf,GAA1B,CAAnB;AACAC,EAAAA,MAAM,CAACQ,KAAP;AACA,SAAO;AACLjB,IAAAA,KAAK,EAAE;AACLkB,MAAAA,KAAK,EAAEJ,IAAI,CAACI,KADP;AAELC,MAAAA,KAAK,EAAEL,IAAI,CAACK,KAFP;AAGLC,MAAAA,WAAW,EAAEN,IAAI,CAACM,WAHb;AAILC,MAAAA,OAAO,EAAEP,IAAI,CAACO;AAJT;AADF,GAAP;AAQD;AAED,eAAetB,iBAAf","sourcesContent":["import React, { Fragment } from 'react'\r\nimport MeetupDetails from '../../components/meetups/MeetupDetails'\r\nimport { MongoClient, ObjectId } from 'mongodb'\r\n\r\nconst MeetupDetailsPage = (props) => {\r\n  return (\r\n    <Fragment>\r\n      <MeetupDetails {...props} />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n  return {\r\n    fallback: true,\r\n    paths: [\r\n      {\r\n        params: { meetupId: 'm1' },\r\n      },\r\n    ],\r\n  }\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  const id = context.params.meetupId\r\n  const client = await MongoClient.connect(\r\n    'mongodb+srv://karthik:admin@cluster0.ovvz5.mongodb.net/meetupsDB?retryWrites=true&w=majority'\r\n  )\r\n  const db = client.db()\r\n  const meetupsCollection = db.collection('meetups')\r\n  const data = await meetupsCollection.findOne({ _id: ObjectId(id) })\r\n  client.close()\r\n  return {\r\n    props: {\r\n      image: data.image,\r\n      title: data.title,\r\n      description: data.description,\r\n      address: data.address,\r\n    },\r\n  }\r\n}\r\n\r\nexport default MeetupDetailsPage\r\n"]},"metadata":{},"sourceType":"module"}