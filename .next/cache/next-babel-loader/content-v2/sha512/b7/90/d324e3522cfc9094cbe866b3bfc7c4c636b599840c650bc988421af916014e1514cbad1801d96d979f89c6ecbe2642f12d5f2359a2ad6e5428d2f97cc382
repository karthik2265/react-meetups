{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\karthik suryadevara\\\\React-course-udemy\\\\nextjs-meetups-project\\\\pages\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { MongoClient } from 'mongodb';\nimport MeetupList from '../components/meetups/MeetupList';\n\nconst HomePage = ({\n  meetups\n}) => {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MeetupList, {\n      meetups: meetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getStaticProps() {\n  const client = await MongoClient.connect('mongodb+srv://karthik:admin@cluster0.ovvz5.mongodb.net/meetupsDB?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const data = await meetupsCollection.find().toArray().json();\n  return {\n    props: {\n      meetups: data.map(meetup => {\n        return _objectSpread(_objectSpread({}, meetup), {}, {\n          id: meetup._id.toString()\n        });\n      })\n    }\n  };\n}\nexport default HomePage;","map":{"version":3,"sources":["C:/karthik suryadevara/React-course-udemy/nextjs-meetups-project/pages/index.js"],"names":["React","Fragment","useEffect","useState","MongoClient","MeetupList","HomePage","meetups","getStaticProps","client","connect","db","meetupsCollection","collection","data","find","toArray","json","props","map","meetup","id","_id","toString"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;AACA,SAASC,WAAT,QAA4B,SAA5B;AAEA,OAAOC,UAAP,MAAuB,kCAAvB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAChC,sBACE,QAAC,QAAD;AAAA,2BACE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAND;;AAQA,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAML,WAAW,CAACM,OAAZ,CACnB,8FADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,IAAI,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,GAAyBC,OAAzB,GAAmCC,IAAnC,EAAnB;AAEA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLX,MAAAA,OAAO,EAAEO,IAAI,CAACK,GAAL,CAAUC,MAAD,IAAY;AAC5B,+CAAYA,MAAZ;AAAoBC,UAAAA,EAAE,EAAED,MAAM,CAACE,GAAP,CAAWC,QAAX;AAAxB;AACD,OAFQ;AADJ;AADF,GAAP;AAOD;AAED,eAAejB,QAAf","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react'\r\nimport { MongoClient } from 'mongodb'\r\n\r\nimport MeetupList from '../components/meetups/MeetupList'\r\n\r\nconst HomePage = ({ meetups }) => {\r\n  return (\r\n    <Fragment>\r\n      <MeetupList meetups={meetups} />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport async function getStaticProps() {\r\n  const client = await MongoClient.connect(\r\n    'mongodb+srv://karthik:admin@cluster0.ovvz5.mongodb.net/meetupsDB?retryWrites=true&w=majority'\r\n  )\r\n  const db = client.db()\r\n  const meetupsCollection = db.collection('meetups')\r\n  const data = await meetupsCollection.find().toArray().json()\r\n\r\n  return {\r\n    props: {\r\n      meetups: data.map((meetup) => {\r\n        return { ...meetup, id: meetup._id.toString() }\r\n      }),\r\n    },\r\n  }\r\n}\r\n\r\nexport default HomePage\r\n"]},"metadata":{},"sourceType":"module"}